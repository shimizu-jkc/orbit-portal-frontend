@startuml
title Vueコンポーネント構成

package "api" {
	class ProjectAPI {
		+void get()
		+void post()
		+void put()
		+void delete()
	}
	class AccountAPI {
		+void get()
		+void post()
		+void put()
		+void delete()
	}
	class TicketAPI {
		+void get()
		+void post()
		+void put()
	}	
	package "library"{
		class axios
	}
	ProjectAPI --> axios : use
	AccountAPI --> axios : use
	TicketAPI --> axios : use
}

package "store" {
	class Store {
		#state
		#getters
		#actions
		#mutations
	}
	class ProjectStore {
		-String projectName
		-String projectEmail
		-String division
		-Number budget
		-"Array<Object> members"
		-Object result
		+"Promise actions.get()"
		+"Promise actions.post()"
		+"Promise actions.put()"
		+"Promise actions.delete()"
	}
	ProjectStore --> ProjectAPI : use
	class AccountStore {
		-String projectName
		-String accountId
		-String accountName
		-String accountEmail
		-String status	
		-String env
		-String billingOWDepartmentCode
		-String billingOWUsageCode
		-String billingProjectCode
		-String billingProjectSubCode
		-Number startOperationDate
		-Number expireOperationDate
		-"Array<Object> roles"
		-Object result
		+"Promise actions.get()"
		+"Promise actions.post()"
		+"Promise actions.put()"
		+"Promise actions.delete()"
	}
	AccountStore --> AccountAPI : use
	class TicketStore {
		-String ticketId
		-Number createdAt
		-Number updatedAt
		-String ticketEmail
		-String type
		-String status
		-Object content
		-Object result
		+"Promise actions.get()"
		+"Promise actions.post()"
		+"Promise actions.put()"
	}
	TicketStore --> TicketAPI : use
	class CacheStore {
		-String authProjectName
		-String authProjectEmail
		-String authAccountId
	}
	Store <|-- ProjectStore 
	Store <|-- AccountStore 
	Store <|-- TicketStore
	Store <|-- CacheStore
}

package "CommonComponent" {
	class Loading {
		+Boolean visible
		+String message
	}
	class Notification {
		+String status
		+String title
		+String message
	}
	class Confirm {
		+String title
		+String message
		-Button OK
		-Button キャンセル
	}
}

package "FormPartsComponent" {
	class ProjectBasicAuth {
		~Input projectName
		~Input projectEmail
		+String text
		-"Button :text"
	}
	ProjectBasicAuth -left-> Loading : use
	ProjectBasicAuth -left-> Notification : use
	ProjectBasicAuth --> CacheStore: use
	class ProjectInfo {
		#String operation
		~Input projectName
		~Input projectEmail
		~Select division
		~InputNumber budget
		~FormPartsComponent MemberList
	}
	ProjectInfo --> MemberList : use
	ProjectInfo --> ProjectStore : use
	class MemberList {
		#Boolean readOnly
		~FormPartsComponent "Array<MemberItem>"
	}
	MemberList --> MemberItem : use
	MemberList --> ProjectStore : use
	class MemberItem {
		~Input department
		~Input name
		~Input email
	}
	
	class AccountBasicAuth {
		~Input projectName
		~Input accountId
		+String text
		-"Button :text"
	}
	AccountBasicAuth -left-> Loading : use
	AccountBasicAuth -left-> Notification : use
	AccountBasicAuth -> CacheStore : use
	class AccountInfo {
		~Input projectName
		~Input accountId
		~Input accountName
		~Input accountEmail
		~Input status	
		~Select env
		~FormPartsComponent BillingInfo
		~FormPartsComponent OpsInfo
		~FormPartsComponent MemberRoles
	}
	AccountInfo --> BillingInfo : use
	AccountInfo --> OpsInfo : use
	AccountInfo --> MemberRoles : use
	AccountInfo --> AccountStore : use
	class BillingInfo {
		~Input billingOWDepartmentCode
		~Input billingOWUsageCode
		~Input billingProjectCode
		~Input billingProjectSubCode
	}
	class OpsInfo {
		~DatePicker startOperationDate
		~DatePicker expireOperationDate
	}
	class MemberRoles {
		~Select name
		~Input email
		~Select role	
	}

	class TicketList {
		~FormPartsComponent "Array<TicketItem>"
		-Input projectName
		-Input accountId
	}
	TicketList --> TicketItem : use
	TicketList --> TicketStore : use
	class TicketItem {
		-Input createdAt
		-Input updatedAt
		-Input status
		-Input ticketEmail
		-Input type
		-Button 詳細
	}
	class TicketInfo {
		-Input ticketId
		-Input createdAt
		-Input updatedAt
		-Input ticketEmail
		-Input type
		-Input status
		~FormPartsComponent content
	}
	TicketInfo --> TicketContent : use
	TicketInfo --> TicketStore : use
	class TicketContent {
		~TextArea note
	}
	class TicketContentReqKeyPair {
	}
	class TicketContentReqAuditLog {
		~Select service
		~DatePicker startDate
		~DatePicker endDate
	}
	class TicketContentReqChangeSupport {
		~Select expectedPlan
	}
	class TicketContentReqOther {
	}
	TicketContent --> TicketStore : use
	TicketContent <|-down- TicketContentReqKeyPair
	TicketContent <|-down- TicketContentReqAuditLog
	TicketContent <|-down- TicketContentReqChangeSupport
	TicketContent <|-down- TicketContentReqOther
}
package "ScreenComponent" {
	class FormCreateProject {
		-Button 登録する
		-FormPartsComponent ProjectBasicAuth
		-FormPartsComponent ProjectInfo
	}
	FormCreateProject -down-> ProjectBasicAuth : use
	FormCreateProject --> ProjectInfo : use

	class FormGetProject {
		-Button 編集
		-FormPartsComponent ProjectBasicAuth
		-FormPartsComponent ProjectInfo
	}
	FormGetProject --> ProjectBasicAuth : use
	FormGetProject --> ProjectInfo : use

	class FormUpdateProject {
		-Button 更新する
		-Button キャンセル		
		-FormPartsComponent ProjectBasicAuth
		-FormPartsComponent ProjectInfo
	}
	FormUpdateProject --> ProjectBasicAuth : use
	FormUpdateProject --> ProjectInfo : use

	class FormDeleteProject {
		-Button 削除する
		-FormPartsComponent ProjectBasicAuth
	}
	FormDeleteProject --> ProjectBasicAuth : use
	
	class FormCreateAccount {
		-Button 申請する
		-FormPartsComponent ProjectBasicAuth
		-FormPartsComponent AccountInfo
	}
	FormCreateAccount --> ProjectBasicAuth : use
	FormCreateAccount --> AccountInfo : use
	
	class FormGetAccount {
		-Button 編集
		-FormPartsComponent AccountBasicAuth
		-FormPartsComponent AccountInfo
	}
	FormGetAccount --> AccountBasicAuth : use
	FormGetAccount --> AccountInfo : use

	class FormUpdateAccount {
		-Button 更新する
		-Button キャンセル
		-FormPartsComponent AccountBasicAuth
		-FormPartsComponent AccountInfo
	}
	FormGetAccount --> AccountBasicAuth : use
	FormGetAccount --> AccountInfo : use
	
	class FormDeleteAccount {
		-Button 削除する	
		-FormPartsComponent AccountBasicAuth
	}
	FormDeleteAccount --> AccountBasicAuth : use
	
	class FormCreateTicket {
		-Button 依頼する
		-FormPartsComponent AccountBasicAuth
		-FormPartsComponent TicketInfo
	}
	FormCreateTicket --> AccountBasicAuth : use
	FormCreateTicket --> TicketInfo : use

	class FormGetTickets {
		-Button 確認する
		-FormPartsComponent AccountBasicAuth
		-FormPartsComponent TicketList
	}
	FormGetTickets --> AccountBasicAuth : use
	FormGetTickets --> TicketList : use

	class FormGetTicket {
		-Button 編集
		-FormPartsComponent TicketInfo
	}
	FormGetTicket --> TicketInfo : use
	
	class FormUpdateTicket {
		-Button 更新する
		-Button キャンセル
		-FormPartsComponent TicketInfo
	}
	FormUpdateTicket --> TicketInfo : use

	class AppCatalogList {
		-"Array<Button> 詳細"
		-FormPartsComponent AppCatalogItem
	}
	AppCatalogList -right-> AppCatalogItem : use	
	class AppCatalogItem
}
ScreenComponent -down-> CommonComponent : use


@enduml